name: CONTINUOUS-DEPLOYMENT

on:

  workflow_call:
    inputs:
      target-deploy:
        required: true
        type: string
      site-url:
        required: true
        type: string
      blue-green:
        required: true
        type: string

permissions:
  contents: read
  pages: write
  id-token: write
    
jobs:

  build-artifacts:
    name: Get Build Artifacts
    outputs:
      target-revealmd: ${{ steps.revealmd.outputs.TARGET }}
      current-revealmd: ${{ steps.revealmd.outputs.CURRENT }}
      target-landing: ${{ steps.landing.outputs.TARGET }}
      current-landing: ${{ steps.landing.outputs.CURRENT }}
      deploy-to: ${{ steps.deployment-config.outputs.DEPLOY }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:

      - name: Checkout GitOps
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.REPO_GITOPS }}
          ref: 'main'
          token: ${{ secrets.CD_PAT }}

      - name: Deployment configuration
        id: deployment-config
        run: |
          value="$(yq '.repositories.deployment.${{ inputs.target-deploy }}.${{ inputs.blue-green }}-deploy-to' 'repositories.yml')" || 'ERROR'
          echo "DEPLOY=$value" >> $GITHUB_OUTPUT

      - name: Create directory
        run: mkdir _site
  
        ##### Solution: Landing

      - name: Landing Target Build
        id: landing
        run: |
          target="$(yq '.build.landing' 'builds.yml')" || 'ERROR'
          echo "TARGET=$target" >> $GITHUB_OUTPUT
          echo "Target = $target"
          current="$(yq '.deploy.${{ inputs.target-deploy }}.${{ inputs.blue-green }}.landing' 'builds.yml')" || 'ERROR'
          echo "CURRENT=$current" >> $GITHUB_OUTPUT
          echo "Current = $current"
          repo="$(yq '.repositories.solutions.landing.ref' 'repositories.yml')" || 'ERROR'
          echo "REPO=$repo" >> $GITHUB_OUTPUT

      - name: Get Landing Pages Build Artefact
        run: |
          wget "https://github.com/${{ steps.landing.outputs.REPO }}/releases/download/${{ steps.landing.outputs.TARGET }}/build.tar.gz" -O landing.tar.gz
          mkdir landing
          tar -xzvf landing.tar.gz -C landing
          rsync -avh landing/_site/ _site

      ##### Solution: Reveal-MD

      - name: Reveal-MD Target Build
        id: revealmd
        run: |
          target="$(yq '.build.revealmd' 'builds.yml')" || 'ERROR'
          echo "TARGET=$target" >> $GITHUB_OUTPUT
          echo "Target = $target"
          current="$(yq '.deploy.${{ inputs.target-deploy }}.${{ inputs.blue-green }}.revealmd' 'builds.yml')" || 'ERROR'
          echo "CURRENT=$current" >> $GITHUB_OUTPUT
          echo "Current = $current"
          repo="$(yq '.repositories.solutions.revealmd.ref' 'repositories.yml')" || 'ERROR'
          echo "REPO=$repo" >> $GITHUB_OUTPUT

      - name: Reveal-MD Build Artefact
        run: |
          wget "https://github.com/${{ steps.revealmd.outputs.REPO }}/releases/download/${{ steps.revealmd.outputs.TARGET }}/build.tar.gz" -O revealmd.tar.gz
          mkdir revealmd
          tar -xzvf revealmd.tar.gz -C revealmd
          rsync -avh revealmd/_site/ _site/revealmd

      - name: List Files
        run: |
          echo "$(cd _site && ls -R)" >> $GITHUB_STEP_SUMMARY

      # Set right SITE URL for the relevant environment
      - name: Update aboslute links for relevant environments
        run: grep -rl localhost . | xargs sed -i 's@http://localhost@https://${{ inputs.site-url }}@g'

      # Set right URL for featurevisor feature flags service
      - name: Update links to feature flags
        run: grep -rl datafile-tag-all.json . | xargs sed -i 's@datafiles/ci/datafile-tag-all.json@datafiles/${{ inputs.target-deploy }}/datafile-tag-all.json@g'

      # Set whether deployment is blue/green
      - name: Update DEPLOY-BLUE-GREEN
        run: grep -rl DEPLOY-BLUE-GREEN . | xargs sed -i 's@DEPLOY-BLUE-GREEN@${{ inputs.blue-green }}@g'

      # Set deploy host to help identify blue/green
      - name: Update DEPLOY-HOST-PLACEHOLDER
        run: grep -rl DEPLOY-HOST-PLACEHOLDER . | xargs sed -i 's@DEPLOY-HOST-PLACEHOLDER@${{ steps.deployment-config.outputs.DEPLOY }}@g'

      ##### Upload Deployable Artifact

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('{0}-{1}', 'RC', github.run_id ) }}
          path: _site
          retention-days: 1
  
  ### Pre-Deployment Tests

  # Check links working in compiled deploy artefact
  check-links:
    name: Check Links
    needs: [build-artifacts]
    uses: ./.github/workflows/check-links.yml
    permissions:
      contents: read
    secrets: inherit
    with: 
      artefact-ref: ${{ format('{0}-{1}', 'RC', github.run_id ) }}
      toggle: ${{ vars.CHECK_LINKS }}

  ### Deployment
  
  # Deploy to Static Site Host
  deploy-static-site:
    name: Deploy GHP
    needs: [build-artifacts]
    uses: ./.github/workflows/deploy-static-site.yml
    permissions:
      contents: read
      pages: write
      id-token: write
    secrets: inherit
    with:
      artefact-ref: ${{ format('{0}-{1}', 'RC', github.run_id ) }}
      deploy-to: ${{ needs.build-artefacts.outputs.deploy-to }}
      site-url: ${{ inputs.site-url }}

  ### Post-deployment Tests (smoke, PVT, etc)
  
  post-deploy-test:
    name: Placeholder for post-deployment tests
    needs: [deploy-static-site]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: none
    steps:

      - name: Echo
        run: echo "Placeholder for post-deploy test"

  # Given successful testing then update the build for this environment in GitOps Config
  config-revealmd:
    name: Actual Build for Reveal-MD
    needs: [build-artifacts, post-deploy-test]
    if: ${{ needs.build-artefacts.outputs.current-revealmd != needs.build-artefacts.outputs.target-revealmd }}
    uses: ./.github/workflows/gitops-update.yml
    permissions:
      contents: write
    with:
      config-item: '.deploy.${{ inputs.target-deploy }}.${{ inputs.blue-green }}.revealmd'
      config-value: ${{ needs.build-artefacts.outputs.target-revealmd }}
    secrets: inherit

  # Given successful testing then update the build for this environment in GitOps Config
  config-landing:
    name: Actual Build for Landing
    needs: [build-artifacts, post-deploy-test]
    if: needs.build-artefacts.outputs.current-landing != needs.build-artefacts.outputs.target-landing
    uses: ./.github/workflows/gitops-update.yml
    with:
      config-item: '.deploy.${{ inputs.target-deploy }}.${{ inputs.blue-green }}.landing'
      config-value: ${{ needs.build-artefacts.outputs.target-landing }}
    secrets: inherit

  # Check all acceptance completed
  acceptance-complete:
    name: Acceptance 👍
    needs: [build-artifacts, check-links, deploy-static-site, post-deploy-test, config-revealmd, config-landing] ### ADD ALL CHECKS
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    permissions:
      contents: none
    steps:

      - name: Ready message
        run: echo "### Acceptance Completed :thumbsup:" >> $GITHUB_STEP_SUMMARY

  acceptance-failed:
    name: Acceptance 👎
    needs: [build-artifacts, check-links, deploy-static-site, post-deploy-test, config-revealmd, config-landing] ### ADD ALL CHECKS
    if: always() && ( contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') )
    runs-on: ubuntu-latest
    permissions:
      contents: none
    steps:

      - name: Ready message
        run: echo "### Acceptance Failed :thumbsdown:" >> $GITHUB_STEP_SUMMARY
